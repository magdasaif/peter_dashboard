Post::get();
Post::find($id);
Post::with(['relation name']);
Post::findOrfail($request->id);
Post::findOrfail($request->id)->delete();

Post::whereIn('id',$id_array)->delete();
Post::select('*')->first();
Post::create($request->all());

 $grade =new Grade();
 $grade->name=['en'=>$request->name_en,'ar'=>$request->name];
 $grade->notes= $request->notes;
 $grade->save();



Post::update($request->all());
Post::select('id','name')->get();
Post::where('id','=',$id)->pluck('id','name');
Post::destroy($id);

$table->unsignedBigInteger('teacher_id');
$table->unsignedBigInteger('section_id');

$table->foreign('teacher_id')->references('id')->on('teachers')->onDelete('cascade');
$table->foreign('section_id')->references('id')->on('sections')->onDelete('cascade');


$count = Sub_Category2::where('cate_id', 1)->count();



 //get data of selected products ids
        // $products = ProductResource::collection(
        //     Product::select('*',$selected,$selected2,$selected3,$selected4)
        //             ->join('products_suppliers', 'products_suppliers.product_id', '=', 'products.id')
        //             ->join('suppliers', 'suppliers.id', '=', 'products_suppliers.supplier_id')
        //             ->whereIn('products.id',$products_ids)
        //             ->where('products.status','1')
        //             ->orderBy('products.sort','asc')
        //             ->paginate($perpage)
        //         );